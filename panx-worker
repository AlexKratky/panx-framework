<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
require(__DIR__."/app/panx-worker/TS_CMD.php");
require(__DIR__."/vendor/autoload.php");
$PROGRAM_INFO["name"] = "panx-worker";
$PROGRAM_INFO["version"] = "v0.1 (30-04-2019) [dd-mm-yyyy]";

$BINDS = array('');

if ($ARGS_COUNT == 0) {
    info_msg("panx-worker v0.1. Use argument ? to see help.");
} else {
    if($ARGS[0] == "?") {
        //HELP
        displayInfo();
        write("Available parameters: " . colorize("create", "red", "black"));
        exit();
    }
    if( function_exists ( $ARGS[0] ) && !in_array($ARGS[0], $BINDS) ) {
        call_user_func($ARGS[0]);
    } else {
        //binds
        switch($ARGS[0]) {
            default:
                error_msg("Invalid argument.");
                break;
        }
    }
}

function create() {
    global $ARGS_COUNT;
    global $ARGS;
    if (!isset($ARGS[1])) {error("You need to specify what to create.");}
    if($ARGS[1] == "doc" || $ARGS[1] == "documentation") {
        $docs_folder = "/docs";
        if (isset($ARGS[2])) $docs_folder = $ARGS[2];
        info_msg("Documentation will be created from folder: ".$docs_folder);
        $f = scandir(__DIR__ . $docs_folder);
        $Parsedown = new ParsedownExtra();
        $r_files = "";
        $menu = "";
        mkdir(__DIR__."/template/docs");
        for($i = 2; $i < count($f); $i++) {
            file_put_contents(__DIR__ . "/template/docs/" .  basename($f[$i], ".md") . ".php", $Parsedown->text(file_get_contents(__DIR__ . $docs_folder . "/" . $f[$i])));
            $menu = $menu . "<li class='sidemenu-li'><a href='/docs/".basename($f[$i], ".md")."'>".basename($f[$i], ".md")."</a></li>\r\n";
            $r_files = $r_files . "Route::set('/docs/".basename($f[$i], ".md")."', ['header.php', 'docs/".basename($f[$i], ".md").".php', 'footer.php']);\r\n";
        }
        /**
         * Steps that panx-worker must do:
         * * Edit route.php
         * * Create header.php
         * * From generated html create php file and put it to template
         */
        write(colorize("Keep current home.php file? [y/N]", "cyan", "black"), false);
        $H = read("");
        $route;
        if ($H != "y" && $H != "Y") {
            file_put_contents(__DIR__ . "/template/home.php", "<h1>Documentation created by panx-worker</h1>");
            $route = "<?php
            Route::set('/', ['header.php', 'home.php', 'footer.php']);
            Route::set('/docs', ['header.php', 'footer.php']);\r\n" . $r_files;
        } else {
            $route = "<?php
            Route::set('/', 'home.php');
            Route::set('/docs', ['header.php', 'footer.php']);\r\n" . $r_files;
        }
        if(mkdir(__DIR__."/routes/backup/")) {
            copy(__DIR__."/routes/route.php", __DIR__."/routes/backup/route.php");
        }
        file_put_contents(__DIR__."/routes/route.php", $route);
        file_put_contents(__DIR__."/template/header.php", file_get_contents(__DIR__."/app/panx-worker/docs-resource/header.php") . $menu . file_get_contents(__DIR__."/app/panx-worker/docs-resource/header_continue.php"));
        copy(__DIR__."/app/panx-worker/docs-resource/footer.php", __DIR__."/template/footer.php");

    }
}

function install() {
    global $ARGS_COUNT;
    global $ARGS;
}